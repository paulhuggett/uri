name: CI Build & Test
# Triggers the workflow on push or pull request events
on: [push, pull_request]
permissions:
  contents: read

jobs:
  build:
    strategy:
      matrix:
        include:
          # macOS builds
          # ~~~~~~~~~~~~
          - name: macOS-14/Xcode/Debug
            build_type: Debug
            generator: Xcode
            options:
            os: macos-14
            xcode_version: 15.3

          - name: macOS-14/Xcode/Release
            build_type: Release
            generator: Xcode
            options:
            os: macos-14

          # Linux builds
          # ~~~~~~~~~~~~
          - name: Ubuntu-22.04/gcc-13/Debug
            apt_install: cmake ninja-build g++-13 libstdc++-10-dev
            build_type: Debug
            cxx_compiler: -D CMAKE_C_COMPILER=gcc-13 -D CMAKE_CXX_COMPILER=g++-13
            generator: Ninja
            options:
            os: ubuntu-22.04

          - name: Ubuntu-22.04/gcc-13/Release
            apt_install: cmake ninja-build g++-13 libstdc++-10-dev
            build_type: Release
            cxx_compiler: -D CMAKE_C_COMPILER=gcc-13 -D CMAKE_CXX_COMPILER=g++-13
            generator: Ninja
            options:
            os: ubuntu-22.04

          - name: Ubuntu-22.04/clang-16/Debug
            apt_install: cmake ninja-build
            llvm_install: 16
            build_type: Debug
            cxx_compiler: -D CMAKE_C_COMPILER=clang-16 -D CMAKE_CXX_COMPILER=clang++-16
            generator: Ninja
            options: -D CMAKE_EXE_LINKER_FLAGS=-fuse-ld=gold
            os: ubuntu-22.04

          - name: Ubuntu-22.04/clang-16/Release
            apt_install: cmake ninja-build
            llvm_install: 16
            build_type: Release
            cxx_compiler: -D CMAKE_C_COMPILER=clang-16 -D CMAKE_CXX_COMPILER=clang++-16
            generator: Ninja
            options: -D CMAKE_EXE_LINKER_FLAGS=-fuse-ld=gold
            os: ubuntu-22.04

          # Windows builds
          # ~~~~~~~~~~~~~~
          - name: Windows-latest/VS2022/Debug
            build_type: Debug
            generator: Visual Studio 17 2022
            options:
            os: windows-latest

          - name: Windows-latest/VS2022/Release
            build_type: Release
            generator: Visual Studio 17 2022
            options:
            os: windows-latest

    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}

    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@63c24ba6bd7ba022e95695ff85de572c04a18142 # v2.7.0
        with:
          egress-policy: audit

      - name: Checkout repository
        uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633 # v4.1.2
        with:
          submodules: 'True'

      - name: Install Dependencies (Linux)
        if: startsWith (matrix.os, 'ubuntu-') && matrix.apt_install != ''
        run: |
          sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test && \
          sudo apt-get update && \
          sudo apt-get install -y ${{ matrix.apt_install }}

      - name: Install Dependencies (LLVM)
        if: matrix.llvm_install != ''
        run: |
          wget https://apt.llvm.org/llvm.sh
          # Force --yes to the end of the add-apt-repository command to
          # prevent the llvm.sh script hanging.
          sed -ie "/^add-apt-repository/ s/$/ --yes/" llvm.sh
          chmod +x llvm.sh
          sudo ./llvm.sh ${{matrix.llvm_install}}

      - name: Select Xcode (macOS)
        if: matrix.xcode_version != ''
        run: |
          ls /Applications/Xcode*.app
          sudo xcode-select -s /Applications/Xcode_${{matrix.xcode_version}}.app/Contents/Developer

      - name: Create Build Environment
        run: cmake -E make_directory ${{ github.workspace }}/build

      - name: Configure CMake
        shell: bash
        run: |
          cmake -S "$GITHUB_WORKSPACE"                       \
                -B "${{ github.workspace }}/build"           \
                -G "${{ matrix.generator }}"                 \
                -D CMAKE_BUILD_TYPE=${{ matrix.build_type }} \
                -D URI_WERROR=Yes                            \
                ${{ matrix.cxx_compiler }}                   \
                ${{ matrix.options }}

      - name: Build
        shell: bash
        run: cmake --build "${{ github.workspace }}/build" --config ${{ matrix.build_type }}
